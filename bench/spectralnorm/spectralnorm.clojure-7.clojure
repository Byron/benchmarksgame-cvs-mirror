;; The Computer Language Benchmarks Game
;; http://benchmarksgame.alioth.debian.org/
;;
;; contributed by Jim Kannampuzha
;; inspired by Jesse Rosenstock

(ns spectralnorm
  (:gen-class))

(set! *warn-on-reflection* true)

(defmacro eval-a [i j]
  `(let [n# (unchecked-add ~i ~j)
         nn+1# (unchecked-multiply n# (unchecked-inc n#))]
     (/ (double 1.0) (unchecked-add (bit-shift-right nn+1# 1)
				    (unchecked-inc ~i)))))

(defn multiply-a-v [agent ^doubles v ^doubles av range]
  (let [end (int (second range))]
    (loop [i (int (first range))]
      (if (= i end)
        nil
        (do
	  (aset av i (double (areduce v j sum (double 0)
				      (+ sum (* (eval-a i j) (aget v j))))))
	  (recur (unchecked-inc i)))))))

(defn multiply-at-v [agent ^doubles v ^doubles atv range]
  (let [end (int (second range))]
    (loop [i (int (first range))]
      (if (= i end) 
        nil
        (do
	  (aset atv i (double (areduce v j sum (double 0)
				       (+ sum (* (eval-a j i) (aget v j))))))
	  (recur (unchecked-inc i)))))))

(defn multiply-at-a-v [^doubles v ^doubles tmp ^doubles at-av workers ranges]
  (apply await (map #(send %1 multiply-a-v v tmp %2) workers ranges))
  (apply await (map #(send %1 multiply-at-v tmp at-av %2) workers ranges)))

(defmacro dot-product [^doubles u ^doubles v]
  `(areduce ~u i# sum# (double 0) (+ sum# (* (aget ~u i#) (aget ~v i#)))))

(defn run-game [size]
  (let [num-threads (.availableProcessors (Runtime/getRuntime))
        workers (vec (repeatedly num-threads #(agent ())))
        chunk-size (int (Math/ceil (/ size num-threads)))
        ranges  (vec (partition 2 1 (take (inc num-threads)
                                          (iterate #(+ chunk-size %) 0))))
        u (double-array size 1.0)
        tmp (double-array size 0.0)
        v (double-array size 0.0)]
    (dotimes [_ 10]
      (multiply-at-a-v u tmp v workers ranges)
      (multiply-at-a-v v tmp u workers ranges))
    (Math/sqrt (/ (dot-product u v) (dot-product v v)))))

(defn -main [& args]
  (let [n (if (empty? args)
            2500
            (Integer/valueOf ^String (first args)))]
    (println (format "%.9f" (run-game n)))
    (shutdown-agents)))

