-- Language definition generated by lang2to3

Description="Pascal"

Digits=[[ (?:0x|0X|\$)[0-9a-fA-F]+|\d*[\.\_]?\d+(?:[eE][\-\+]\d+)?[lLuUbfdm]* ]]

Keywords={
  { Id=1,
    List={"absolute", "abstract", "and", "array", "as", "asm", "assembler", "automated", "begin", "case", "cdecl", "class", "const", "constructor", "destructor", "dispid", "dispinterface", "div",   "dynamic", "end", "except", "export", "exports", "external", "far", "file", "finalization", "finally", "forward", "function", "goto", "implementation", "in", "initialization", "inherited", "inline", "interface", "is", "label", "library", "message", "mod", "near", "nil", "not", "object", "of", "or", "out", "override", "packed", "pascal", "private", "procedure", "program", "property", "protected", "public", "published", "raise", "record", "register",  "resourcestring", "safecall", "set", "shl", "shr", "stdcall", "string", "threadvar", "try", "type", "unit", "uses", "var", "virtual", "xor"},
  },
  { Id=2,
    List={"boolean", "char", "integer", "pointer", "real", "text", "true", "false", "cardinal", "longint", "byte", "word", "single", "double", "int64"},
  },
  { Id=3,
    List={"if", "else", "then", "downto", "do", "for", "repeat", "while", "to", "until", "with"},
  },
  { Id=4,
    Regex=[[(\w+)\s*\(]],
  },
}

Strings={
  Delimiter=[["|']],
  Escape="#[[:digit:]]+"
}

IgnoreCase=true

Comments={
  { Block=false,
    Delimiter= { [[//]] },
  },
  { Block=true,
    Nested=false,
    Delimiter= { [[\{]],[[\}]] }
  },
  { Block=true,
    Nested=false,
    Delimiter= { [[\(\*]],[[\*\)]] }
  }
}

NestedSections = {
  { Lang="assembler", Delimiter= { [[asm]], [[end;]] } }
}

Operators=None

