/* The Computer Language Benchmarks Game
   http://shootout.alioth.debian.org/
 
   contributed by Diederik van Arkel
   corrected by John van Groningen
*/

module spectralnorm
import StdEnv, StdArrayExtensions,LanguageShootout

Start
	# n	= argi
	# u = createUnboxedRealArr n 1.0
	# v = createUnboxedRealArr n 0.0
	# r = eigenvalue n (powerMethod 10 n (u,v))
	= toStringWith 9 r +++ "\n"


eigenvalue n (u,v) = sqrt(vBv/vv)
   where      
   vBv = asum {a*b \\ a <-: u & b <-: v}   
   vv = asum {a*a \\ a <-: v}   

asum :: !{#Real} -> Real
asum a
	# n	= size a
	= sum 0.0 0 n a
where
	sum acc i n a
		| i >= n	= acc
		= sum (acc + a.[i]) (i+1) n a

powerMethod 0 n (u,v) = (u,v)  
powerMethod step n (u,v) 
   # (u,v) = AtAv n u v 
   # (v,u) = AtAv n v u 
   = powerMethod (step-1) n (u,v)   

A one i j
//	:== 1.0 / toReal ( (i+j) * (i+j+1) / 2 + i + 1 )
//	:== 1.0 / toReal ( x * (x+1) / 2 + i + 1 )
	:== one / toReal ( x * (x+1) / 2 + i + 1 )
where
	x = i + j

Av n v a = aloop 1.0 (n-1) (n-1) v a
	where
	aloop :: !Real !Int !Int !*{#Real} !*{#Real} -> (!.{#Real},!.{#Real})
	aloop one n i v a
	  | i>=0 #! ai = avsum one i n v 0.0
			 = aloop one n (i-1) v {a&[i] = ai}
	         = (v,a)

	avsum :: !Real !Int !Int !{#Real} !Real -> Real
	avsum one i j v x
	  | j>=0 = avsum one i (j-1) v (x+((A one i j)*v.[j]))
	         = x

Atv n v a = aloop 1.0 (n-1) (n-1) v a     
	where
	aloop :: !Real !Int !Int !{#Real} !*{#Real} -> .{#Real}
	aloop one n i v a
	  | i>=0 = aloop one n (i-1) v {a&[i] = atvsum one i n v 0.0}
	         = a   
	         
	atvsum :: !Real !Int !Int !{#Real} !Real -> Real
	atvsum one i j v x
	  | j>=0 = atvsum one i (j-1) v (x+((A one j i)*v.[j]))
	         = x

AtAv n u av
	# v 		= createUnboxedRealArr n 0.0
	#! (u,v)	= Av n u v
	#! av		= Atv n v av
	= (u,av)
